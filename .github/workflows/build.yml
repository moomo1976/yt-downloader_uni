name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        pytest --cov=src
    
  build-windows:
    needs: test
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build executable
      run: |
        pyinstaller --onefile --windowed --name "YT-Downloader-Pro" main.py
    
    - name: Upload Windows executable
      uses: actions/upload-artifact@v3
      with:
        name: yt-downloader-pro-windows
        path: dist/YT-Downloader-Pro.exe
    
  build-macos:
    needs: test
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install system dependencies
      run: |
        brew install ffmpeg
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build executable
      run: |
        pyinstaller --onefile --windowed --name "YT-Downloader-Pro" main.py
    
    - name: Upload macOS executable
      uses: actions/upload-artifact@v3
      with:
        name: yt-downloader-pro-macos
        path: dist/YT-Downloader-Pro
    
  release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Windows artifact
      uses: actions/download-artifact@v3
      with:
        name: yt-downloader-pro-windows
        path: ./windows/
    
    - name: Download macOS artifact
      uses: actions/download-artifact@v3
      with:
        name: yt-downloader-pro-macos
        path: ./macos/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./windows/YT-Downloader-Pro.exe
          ./macos/YT-Downloader-Pro
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}